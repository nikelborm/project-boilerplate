name: project-boilerplate
services:
  backend-dev:
    build:
      context: /home/nikel/project-boilerplate
      dockerfile: ./backend/Dockerfile
      args:
        DEV_BACKEND_DEBUGGER_PORT: "9229"
        INNER_BACKEND_HTTP_SERVER_PORT: "3001"
        INNER_BACKEND_WS_SERVER_PORT: "3002"
      target: development
    depends_on:
      postgres-dev:
        condition: service_started
    environment:
      AUTH_JWT_SECRET: '[a0oej4rgip5g0aijefogpihn[4ijks;wk3f3ihgposldckdieselkwn5
        vlkfj[q34t"k:\"KP_FF\"#ORKOWI:EJLEDK_@#sKOJGWRLGNK<ASJDN:EWLGKJWOIJWOLFJKNDSMNGSG>SNFELK<NSFMNSDLKGJBNO:FLKWEMF}}]]]'
      BOOTSTRAP_MODE: mockAndEndpoints
      DATABASE_HOST: postgres-dev
      DATABASE_NAME: pgdockerdatabase
      DATABASE_PASSWORD: pgdockerpass
      DATABASE_PORT: "5432"
      DATABASE_TYPEORM_LOGGING_MODE: '"all"'
      DATABASE_USERNAME: pgdockeruser
      DEV_BACKEND_DEBUGGER_PORT: "9229"
      INVITE_USERS_SIGN_KEY: kjnervlkjnsvirue92hjn34lkjbisdkjbfvo3uhejijfoewlscnm,vniejrnvdkfvb
        ouerif938h4fu8oijw3opqihefnkawjnel
      MOCK_SCRIPT_NAME: fillDBScript
      NODE_ENV: development
      SERVER_PORT: "3001"
      TSC_WATCHFILE: UseFsEvents
      TZ: Europe/Moscow
      USER_PASSWORD_HASH_SALT: '[ijwefleskemdlckajsrnoe-]50w[4-g3q[4gi-0[wjeirgvsloij;b[-q304ihjilosekrgmoit;ehkgm
        zsj.dne,smjrmnf]]]]]'
      WEB_SOCKET_SERVER_PORT: "3002"
    image: nikelborm/private:project-boilerplate-backend-dev
    networks:
      back-db-net-dev: null
      nginx-back-net-dev: null
      vscode-back-net-dev: null
    ports:
    - mode: ingress
      target: 9229
      published: "9229"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: /home/nikel/project-boilerplate/backend/src
      target: /app/src
      consistency: delegated
    - type: bind
      source: /home/nikel/project-boilerplate/shared
      target: /app/src/types/shared
      consistency: delegated
  frontend-dev:
    build:
      context: /home/nikel/project-boilerplate
      dockerfile: ./frontend/Dockerfile
      args:
        DEV_INNER_FRONTEND_DEBUGGER_PORT: "80"
      target: dev_front
    environment:
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
      DEV_INNER_FRONTEND_DEBUGGER_PORT: "80"
      GENERATE_SOURCEMAP: "true"
      REACT_APP_NAME: project-boilerplate
      TSC_WATCHFILE: UseFsEvents
      TZ: Europe/Moscow
    image: nikelborm/private:project-boilerplate-frontend-dev
    networks:
      nginx-front-net-dev: null
      vscode-front-net-dev: null
    restart: unless-stopped
    volumes:
    - type: bind
      source: /home/nikel/project-boilerplate/frontend/src
      target: /app/src
      consistency: delegated
    - type: bind
      source: /home/nikel/project-boilerplate/shared
      target: /app/src/types/shared
      consistency: delegated
  nginx-dev:
    build:
      context: /home/nikel/project-boilerplate
      dockerfile: ./frontend/Dockerfile
      target: dev_nginx
    depends_on:
      backend-dev:
        condition: service_started
      frontend-dev:
        condition: service_started
    environment:
      DEV_INNER_FRONTEND_DEBUGGER_PORT: "80"
      EXTERNAL_NGINX_HTTP_PORT: "80"
      GENERATE_SOURCEMAP: "true"
      INNER_BACKEND_HTTP_SERVER_PORT: "3001"
      INNER_BACKEND_WS_SERVER_PORT: "3002"
      TZ: Europe/Moscow
    image: nikelborm/private:project-boilerplate-nginx-dev
    networks:
      nginx-back-net-dev: null
      nginx-front-net-dev: null
      nginx-pgadmin-net-dev:
        ipv4_address: 10.5.0.2
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    restart: unless-stopped
  postgres-dev:
    command:
    - -c
    - default_text_search_config=pg_catalog.russian
    environment:
      POSTGRES_DB: pgdockerdatabase
      POSTGRES_PASSWORD: pgdockerpass
      POSTGRES_USER: pgdockeruser
      TZ: Europe/Moscow
    image: postgres
    networks:
      back-db-net-dev: null
      pgadmin-db-net-dev: null
      vscode-db-net-dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    restart: unless-stopped
    tmpfs:
    - /var/lib/postgresql/data
  vscode-devcontainer:
    command:
    - sleep
    - infinity
    environment:
      DEV_BACKEND_DEBUGGER_PORT: "9229"
      DEV_INNER_FRONTEND_DEBUGGER_PORT: "80"
      TSC_WATCHFILE: UseFsEvents
      TZ: Europe/Moscow
    image: mcr.microsoft.com/devcontainers/typescript-node:18
    networks:
      vscode-back-net-dev: null
      vscode-db-net-dev: null
      vscode-front-net-dev: null
    restart: unless-stopped
    volumes:
    - type: bind
      source: /home/nikel/project-boilerplate
      target: /workspaces/project-boilerplate
      consistency: delegated
    - type: bind
      source: /home/nikel/project-boilerplate/shared
      target: /workspaces/project-boilerplate/frontend/src/types/shared
      consistency: delegated
    - type: bind
      source: /home/nikel/project-boilerplate/shared
      target: /workspaces/project-boilerplate/backend/src/types/shared
      consistency: delegated
networks:
  back-db-net-dev:
    name: project-boilerplate_back-db-net-dev
  nginx-back-net-dev:
    name: project-boilerplate_nginx-back-net-dev
  nginx-front-net-dev:
    name: project-boilerplate_nginx-front-net-dev
  nginx-pgadmin-net-dev:
    name: project-boilerplate_nginx-pgadmin-net-dev
    driver: bridge
    ipam:
      config:
      - subnet: 10.5.0.0/16
        gateway: 10.5.0.1
  pgadmin-db-net-dev:
    name: project-boilerplate_pgadmin-db-net-dev
  vscode-back-net-dev:
    name: project-boilerplate_vscode-back-net-dev
  vscode-db-net-dev:
    name: project-boilerplate_vscode-db-net-dev
  vscode-front-net-dev:
    name: project-boilerplate_vscode-front-net-dev
